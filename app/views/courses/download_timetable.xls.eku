# set the filename sent to the user with __filename variable
  # this is optional, if you don't set it, the name will be like products.xls

  __filename = "#{current_user.name}课表.xls"

  # we get 'xls' variable which is a Workbook object
  # then we can create some worksheet to work with, with create_worksheet method

  sheet1 = xls.create_worksheet

  # fill the [0, 0] cell

  # Worksheet#row will return a Row object. We can modify it just like an Array.
  # this code will return the second row and fill the cells.

  sheet1.row(0).concat ["所选课程与时间", "周一", "周二", "周三","周四","周五","周六","周天"]

  # we can access the instance variable we set in the controller, just like
  # in erb template

   for classtime in 1..11
       sheet1.update_row classtime, "第#{classtime}节课",@timetable[1][classtime], @timetable[2][classtime], @timetable[3][classtime],
        @timetable[4][classtime],@timetable[5][classtime],@timetable[6][classtime],@timetable[7][classtime]
   end


  # @courses.each_with_index do |p, i|
  #     sheet1.update_row i+1, p.course_code, p.name, p.credit, p.exam_type, p.teacher.name
  # end

  # we can add some formatting using Spreadsheet::Format object

  title_format = Spreadsheet::Format.new(:color => :blue, :weight => :bold, :size => 18)
 # sheet1.row(0).set_format(0, title_format)

  bold = Spreadsheet::Format.new(:weight => :bold)
  sheet1.row(0).default_format = bold
